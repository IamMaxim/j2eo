+package stdlib
+alias stdlib.class__Object
+alias stdlib.class__String
+alias stdlib.class__Boolean

[] > class__Integer
  class__Object > super
  super > @

  [] > new
    [] > this
      "class__Integer" > className
      class__Object.new > super
      super > @

      memory > v

      [self t] > init
        seq > @
          self.v.write
            t

      [self] > toString
        seq > @
          class__String.constructor2
            self.v.as-string

      [] > inc_post
        class__Integer.constructor1 > old
        seq > @
          old.v.write
            ^.v
          ^.v.write
            add.
              ^.v
              1
          old

      [] > dec_post
        class__Integer.constructor1 > old
        seq > @
          old.v.write
            ^.v
          ^.v.write
            sub.
              ^.v
              1
          old

      [] > inc_pre
        class__Integer.constructor1 > old
        seq > @
          ^.v.write
            add.
              ^.v
              1
          old.v.write
            ^.v
          old

      [] > dec_pre
        class__Integer.constructor1 > old
        seq > @
          ^.v.write
            sub.
              ^.v
              1
          old.v.write
            ^.v
          old

      [] > neg
        seq > @
          class__Integer.constructor2
            ^.v.neg

      [right] > write
        seq > @
          ^.v.write
            right.v
          class__Integer.constructor3
            ^

      [right] > add
        seq > @
          class__Integer.constructor2
            add.
              ^.v
              right.v

      [right] > sub
        seq > @
          class__Integer.constructor2
            sub.
              ^.v
              right.v

      [right] > mul
        seq > @
          class__Integer.constructor2
            mul.
              ^.v
              right.v

      [right] > div
        seq > @
          class__Integer.constructor2
            div.
              ^.v
              right.v

      [right] > mod
        seq > @
          class__Integer.constructor2
            mod.
              ^.v
              right.v

      [right] > add_equal
        seq > @
          ^.v.write
            add.
              ^.v
              right.v
          class__Integer.constructor3
            ^

      [right] > sub_equal
        seq > @
          ^.v.write
            sub.
              ^.v
              right.v
          class__Integer.constructor3
            ^

      [right] > mul_equal
        seq > @
          ^.v.write
            mul.
              ^.v
              right.v
          class__Integer.constructor3
            ^

      [right] > div_equal
        seq > @
          ^.v.write
            div.
              ^.v
              right.v
          class__Integer.constructor3
            ^

      [right] > mod_equal
        seq > @
          ^.v.write
            mod.
              ^.v
              right.v
          class__Integer.constructor3
            ^

      [right] > eq
        seq > @
          class__Boolean.constructor2
            eq.
              ^.v
              right.v

      [right] > neq
        seq > @
          class__Boolean.constructor2
            neq.
              ^.v
              right.v

      [right] > less
        seq > @
          class__Boolean.constructor2
            less.
              ^.v
              right.v

      [right] > leq
        seq > @
          class__Boolean.constructor2
            leq.
              ^.v
              right.v

      [right] > greater
        seq > @
          class__Boolean.constructor2
            greater.
              ^.v
              right.v

      [right] > geq
        seq > @
          class__Boolean.constructor2
            geq.
              ^.v
              right.v

      [right_v] > shift_r
        seq > @
          class__Integer.constructor2
            ^.v.div
              pow.
                2
                right_v.v

      [right_v] > shift_l
        seq > @
          class__Integer.constructor2
            ^.v.mul
              pow.
                2
                right_v.v

      [right_v] > shift_u
        [] > less_0
          class__Integer.constructor2 > @
            div.
              add.
                2147483647
                add.
                  div.
                    sub.
                      ^.^.v
                      1
                    2
                  1
              pow.
                2
                sub.
                  right_v.v
                  1
        [] > geq_0
          ^.^.shift_r > @
            ^.right_v
        seq > @
          if.
            less.
              ^.v
              0
            less_0
            geq_0

      [right_v] > shift_r_equal
        seq > @
          ^.v.write
            ^.v.div
              pow.
                2
                right_v.v
          class__Integer.constructor3
            ^

      [right_v] > shift_l_equal
        seq > @
          ^.v.write
            ^.v.mul
              pow.
                2
                right_v.v
          class__Integer.constructor3
            ^

      [right_v] > shift_u_equal
        seq > @
          ^.write
            ^.shift_u
              right_v
          class__Integer.constructor3
            ^

      [right] > bit_and
        seq > @
          class__Integer.constructor2
            as-int.
              as-bytes.
                ^.v

      [right] > bit_or
        seq > @
          class__Integer.constructor2
            as-int.
              as-bytes.
                ^.v

      [right] > bit_xor
        seq > @
          class__Integer.constructor2
            as-int.
              as-bytes.
                ^.v

      [] > bit_not
        seq > @
          class__Integer.constructor2
            as-int.
              as-bytes.
                ^.v

    seq > @
      this

  [] > constructor1
    new > self
    seq > @
      self

  [t] > constructor2
    new > self
    seq > @
      self.init
        self
        t
      self

  [i_o] > constructor3
    new > self
    seq > @
      self.init
        self
        i_o.v
      self
